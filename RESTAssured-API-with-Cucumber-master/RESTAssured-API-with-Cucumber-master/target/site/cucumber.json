[
  {
    "line": 1,
    "elements": [
      {
        "line": 4,
        "name": "User enter a city name with appid to check its weather",
        "description": "",
        "id": "test-weather-by-city-name;user-enter-a-city-name-with-appid-to-check-its-weather",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1457693842,
              "status": "passed"
            },
            "line": 5,
            "name": "Existing city with name \"NewDelhi\"",
            "match": {
              "arguments": [
                {
                  "val": "NewDelhi",
                  "offset": 25
                }
              ],
              "location": "WeatherTestSteps.existing_city_with_name(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2069858263,
              "status": "passed"
            },
            "line": 6,
            "name": "User gets the weather by city name",
            "match": {
              "location": "WeatherTestSteps.user_gets_the_weather_by_city_name()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52740482,
              "status": "passed"
            },
            "line": 7,
            "name": "The status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 19
                }
              ],
              "location": "WeatherTestSteps.the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1006462532,
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nJSON path main.temp doesn\u0027t match.\nExpected: 300.15\n  Actual: 300.15\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:451)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:613)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:251)\r\n\tat io.restassured.specification.ResponseSpecification$content$1.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:190)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:234)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)\r\n\tat WeatherTestSteps.response_has_the_following_info(WeatherTestSteps.java:57)\r\n\tat âœ½.And Response has the following info(Feature/WeatherTest.feature:8)\r\n",
              "status": "failed"
            },
            "line": 8,
            "name": "Response has the following info",
            "match": {
              "location": "WeatherTestSteps.response_has_the_following_info(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "main.temp",
                  "300.15"
                ],
                "line": 9
              },
              {
                "cells": [
                  "main.pressure",
                  "1002"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 3,
            "name": "@Second"
          }
        ]
      }
    ],
    "name": "Test weather by city name",
    "description": "",
    "id": "test-weather-by-city-name",
    "keyword": "Feature",
    "uri": "Feature/WeatherTest.feature"
  }
]